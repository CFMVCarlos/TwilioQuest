# Project Overview

This project contains various JavaScript modules and scripts for different functionalities. It is based on Twilio's Quest mission, "JavaScript Code Challenges." It presents my first ever interaction with JavaScript and Node.js, and I learned a lot from it.

## Files and Descriptions

- **addFirstToLast.js**: Adds the first element of an array to the last element.
- **chestConfiguration.js**: Manages the configuration of a chest.
- **classes.js**: Contains class definitions used in the project.
- **construction.js**: Handles construction-related logic.
- **divideByTwo.js**: Divides a given number by two.
- **ducktypium.js**: Implements the Ducktypium class.
- **enhancedLifeDetector.js**: Enhances life detection capabilities.
- **fizzBuzz.js**: Implements the FizzBuzz logic.
- **freighterInventory.js**: Manages the inventory of a freighter.
- **freightFilter.js**: Filters freight items based on criteria.
- **freightMass.js**: Calculates the mass of freight items.
- **freightMutator.js**: Mutates freight items.
- **freightScanner.js**: Scans freight items.
- **freightScanner2.js**: Another implementation of a freight scanner.
- **getFirstAmountSorted.js**: Gets the first amount of sorted items.
- **Hello.js**: A simple hello world script.
- **laserConfiguration.js**: Manages laser configuration.
- **laserFunction.js**: Contains functions related to lasers.
- **laserPower.js**: Calculates the power of a laser.
- **northBridgeControl.js**: Controls the north bridge.
- **politeLasers.js**: Implements polite laser functionality.
- **sayPlease.js**: Adds politeness to requests.
- **shouldWater.js**: Determines if watering is needed.
- **sortOrder.js**: Sorts items in a specific order.
- **targetingSolution.js**: Implements the TargetingSolution class.

## Author

- [Carlos Valente](https://github.com/CFMVCarlos)